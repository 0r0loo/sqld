SELECT * FROM T1;
SELECT * FROM T2;


SELECT *
	FROM T1 JOIN T2
		ON T1.EX_ID = T2.EX;
		
CREATE TABLE SQLD_21_01(
	N1 NUMBER(1),
	V1 CHAR(1)
);

INSERT INTO SQLD_21_01(N1, V1) VALUES(1,'A');
INSERT INTO SQLD_21_01(N1, V1) VALUES(2,NULL);
INSERT INTO SQLD_21_01(N1, V1) VALUES(3,'B');
INSERT INTO SQLD_21_01(N1, V1) VALUES(4,'C');

DROP TABLE SQLD_21_01;

CREATE TABLE SQLD_21_02(
	N1 NUMBER(1),
	V1 CHAR(1)
);

INSERT INTO SQLD_21_02(N1, V1) VALUES(1,'A');
INSERT INTO SQLD_21_02(N1, V1) VALUES(2,NULL);
INSERT INTO SQLD_21_02(N1, V1) VALUES(3,'B');

SELECT * FROM SQLD_21_01
WHERE V1 IN (SELECT V1 FROM SQLD_21_02);

SELECT * FROM SQLD_21_01
WHERE V1 NOT IN (SELECT V1 FROM SQLD_21_02);

SELECT * FROM SQLD_21_01 A
WHERE EXISTS (SELECT 'X' FROM SQLD_21_02 B
WHERE A.V1 = B.V1);

SELECT * FROM SQLD_21_01 A
WHERE NOT EXISTS (SELECT 'X' FROM SQLD_21_02 B
WHERE A.V1 = B.V1);

SELECT DNAME, JOB, COUNT(*), SUM(SAL)
	FROM EMP, DEPT
		WHERE EMP.DEPTNO = DEPT.DEPTNO
			GROUP BY ROLLUP(DNAME, JOB);
		
SELECT JOB, ENAME, SAL FROM EMP ORDER BY SAL;

SELECT JOB, ENAME, SAL, RANK() OVER (ORDER BY SAL) ALL_RANK,
	RANK() OVER(PARTITION BY JOB ORDER BY SAL) JOB_RANK FROM EMP ORDER BY JOB DESC;

SELECT JOB, ENAME, SAL, DENSE_RANK() OVER (ORDER BY SAL) FROM EMP;

SELECT MGR, ENAME, SAL, SUM(SAL) OVER(PARTITION BY MGR ORDER BY SAL RANGE UNBOUNDED PRECEDING) FROM EMP;
		
SELECT MGR, SAL, MAX(SAL) OVER(PARTITION BY MGR) MAX_SAL FROM EMP; -- 같은 매니저를 두고 있는 사원 중 가장 많은 월급을 받는 사원의 컬럼 추가

-- 같은 매니저를 둔 사원 중 가장 많은 월급을 가진 사원만 출력하기
SELECT MGR, ENAME, SAL FROM EMP WHERE SAL IN (SELECT MAX(SAL) OVER(PARTITION BY MGR) MAX_SAL FROM EMP) ORDER BY MGR;

SELECT MGR, ENAME, SAL
	FROM (SELECT MGR, ENAME, SAL, MAX(SAL) OVER(PARTITION BY MGR) MAX_SAL FROM EMP)
		WHERE SAL = MAX_SAL;

SELECT MGR, ENAME, HIREDATE, SAL, AVG(SAL) OVER(PARTITION BY MGR ORDER BY SAL ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AVG_SAL FROM EMP;


SELECT MGR, ENAME, HIREDATE, SAL, AVG(SAL) OVER(PARTITION BY MGR ORDER BY SAL ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AVG_SAL FROM EMP;
SELECT MGR, ENAME, HIREDATE, SAL, AVG(SAL) OVER(PARTITION BY MGR ORDER BY SAL RANGE BETWEEN 1 PRECEDING AND 2 FOLLOWING) AVG_SAL FROM EMP;




SELECT MGR, ENAME, HIREDATE, SAL, AVG(SAL) OVER(PARTITION BY MGR ORDER BY SAL) AVG_SAL FROM EMP;

SELECT DEPTNO, SAL, ENAME FROM EMP ORDER BY DEPTNO, SAL;

SELECT DEPTNO, ENAME, SAL,
           SUM(SAL) OVER ( PARTITION BY DEPTNO ORDER BY SAL DESC ROWS UNBOUNDED PRECEDING ) AS SUM_SAL
     FROM EMP ;
 
SELECT DEPTNO, ENAME, SAL,
           SUM(SAL) OVER ( PARTITION BY DEPTNO ORDER BY SAL DESC RANGE UNBOUNDED PRECEDING ) AS SUM_SAL
     FROM EMP ;

    
    